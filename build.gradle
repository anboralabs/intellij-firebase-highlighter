plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '0.6.5'
    id 'org.jetbrains.kotlin.jvm' version '1.4.10'
    id "org.jetbrains.grammarkit" version "2021.1.3"
}

apply plugin: 'org.jetbrains.grammarkit'

import org.jetbrains.grammarkit.tasks.*

group 'co.anbora.labs'
version '2.5.8'

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

task generateFirebaseRulesLexer(type: GenerateLexer) {
    // source flex file
    source = "src/main/grammar/FirebaseRules.flex"
    // target directory for lexer
    targetDir = "src/main/gen/co/anbora/labs/firebase/lang/core/lexer/"
    // target classname, target file will be targetDir/targetClass.java
    targetClass = "FirebaseRulesLexer"
    // if set, plugin will remove a lexer output file before generating new one. Default: false
    purgeOldFiles = true
}

task generateFirebaseRulesParser(type: GenerateParser) {
    // source bnf file
    source = "src/main/grammar/FirebaseRules.bnf"
    // optional, task-specific root for the generated files. Default: none
    targetRoot = 'src/main/gen'
    // path to a parser file, relative to the targetRoot
    pathToParser = '/co/anbora/labs/firebase/lang/core/parser/FirebaseRulesParser.java'
    // path to a directory with generated psi files, relative to the targetRoot
    pathToPsiRoot = '/co/anbora/labs/firebase/lang/core/psi'
    // if set, plugin will remove a parser output file and psi output directory before generating new ones. Default: false
    purgeOldFiles = true
}

// Include the generated files in the source set
def genRoot = file('src/main/gen')

sourceSets {
    main {
        kotlin.srcDir 'src/main/kotlin'
        java.srcDir genRoot
        resources.srcDir 'src/main/resources'
    }
}

// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    version = 'LATEST-EAP-SNAPSHOT'
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }

buildPlugin {
    dependsOn(generateFirebaseRulesLexer, generateFirebaseRulesParser)
}

publishPlugin {
    token = System.getenv("PUBLISH_TOKEN")
}

patchPluginXml {
    changeNotes = file("src/main/html/change-notes.html").getText().toString()
    pluginDescription = file("src/main/html/description.html").getText().toString()
    sinceBuild = '203'
}
